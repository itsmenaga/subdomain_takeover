import requests

f= open("results.txt","w")

with open("finalresult.txt", "r") as file:
	for url in file:
		url = url.rstrip("\n")
		exts=('/')
		print ('[+] Scanning ' + url + ' for Sub-Domain Takeover' )
		for ext in exts:
			url1=url+ext
			try:
				url2 = "http://"+url1
				domain = requests.get(url2 , timeout=5)
				if 'NoSuchBucket' in domain.text :
					print 'S3 Bucket Found'
					f.write(str(url2) + '<====>' + 'S3 Bucket Found')
				elif 'There is no app configured at that hostname' in domain.text :
					print 'Heroku Sub-Domain'
					f.write(str(url2) + '<====>' + 'Heroku Subdomain Found')
				elif 'No Such Account' in domain.text :
					print 'SquareSpace Account'
					f.write(str(url2) + '<====>' + 'SquareSpace Account Found')
				elif "You're Almost There" in domain.text :
					print 'SquareSpace Account'
					f.write(str(url2) + '<====>' + 'SquareSpace Account Found')
				elif "There isn't a GitHub Pages site here" in domain.text :
					print 'GitHub Page'
					f.write(str(url2) + '<====>' + 'GitHub Page Found')
				elif "Sorry, this shop is currently unavailable." in domain.text :
					print 'Shopify Account'
					f.write(str(url2) + '<====>' + 'Shopify Account Found')
				elif "There's nothing here." in domain.text :
					print 'Tumbler Account'
					f.write(str(url2) + '<====>' + 'Tumbler Account Found')
				elif "The site you were looking for couldn't be found." in domain.text :
					print 'Wp-Engine Account'
					f.write(str(url2) + '<====>' + 'Wp-Engine Found')
				elif "Please check that this domain has been added to a service." in domain.text :
					print 'Fastly Account'
					f.write(str(url2) + '<====>' + 'Fastly Account Found')
				elif "This UserVoice subdomain is currently available" in domain.text :
					print 'UserVoice Account'
					f.write(str(url2) + '<====>' + 'UserVoice Account Found')
				elif "404. That's an error" in domain.text :
					print 'Google Account'
					f.write(str(url2) + '<====>' + 'Google Account Found')
				elif "Generated by cloudfront" in domain.text :
					print 'CloudFront Found'
					f.write(str(url2) + '<====>' + 'CloudFront Account Found')
			except:
				pass
			try:
				url3 = "https://"+url1
				domain1 = requests.get(url3 , timeout=5)
				if  'NoSuchBucket' in domain.text:
					print 'S3 Bucket Found'
					f.write(str(url3) + '<====>' + 'S3 Bucket Found')
				elif 'There is no app configured at that hostname' in domain.text :
					print 'Heroku Sub-Domain'
					f.write(str(url2) + '<====>' + 'Heroku Subdomain Found')
				elif 'No Such Account' in domain.text :
					print 'SquareSpace Account'
					f.write(str(url2) + '<====>' + 'SquareSpace Account Found')
				elif "You're Almost There" in domain.text :
					print 'SquareSpace Account'
					f.write(str(url2) + '<====>' + 'SquareSpace Account Found')
				elif "There isn't a GitHub Pages site here" in domain.text :
					print 'GitHub Page'
					f.write(str(url2) + '<====>' + 'GitHub Page Found')
				elif "Sorry, this shop is currently unavailable." in domain.text :
					print 'Shopify Account'
					f.write(str(url2) + '<====>' + 'Shopify Account Found')
				elif "There's nothing here." in domain.text :
					print 'Tumbler Account'
					f.write(str(url2) + '<====>' + 'Tumbler Account Found')
				elif "The site you were looking for couldn't be found." in domain.text :
					print 'Wp-Engine Account'
					f.write(str(url2) + '<====>' + 'Wp-Engine Found')
				elif "Please check that this domain has been added to a service." in domain.text :
					print 'Fastly Account'
					f.write(str(url2) + '<====>' + 'Fastly Account Found')
				elif "This UserVoice subdomain is currently available" in domain.text :
					print 'UserVoice Account'
					f.write(str(url2) + '<====>' + 'UserVoice Account Found')
				elif "404. That's an error" in domain.text :
					print 'Google Account'
					f.write(str(url2) + '<====>' + 'Google Account Found')
				elif "Generated by cloudfront" in domain.text :
					print 'CloudFront Found'
					f.write(str(url2) + '<====>' + 'CloudFront Account Found')
			except:
				pass
		
f.close
print ('Scanning Completed, vulnerable url list stored in results.txt file')
f.close